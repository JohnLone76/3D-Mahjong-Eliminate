- 项目简介
	- 基于Unity的3D消除游戏，该消除游戏有特定的规则，且为关卡制，在限定时间内消除完所有物品即为过关。用户观看完广告可获得特定用途的道具。

- 发布平台：
	-微信小程序游戏
	-适配竖屏移动设备

- 开发软件：
	- Unity 2022.3.5f1c1

- 技术栈
	- Unity
	- C#
	- 严格按照MVC架构进行开发
	- 实用对象池进行内存管理

- 文件结构
	-Assets/				# Unity项目文件夹，当前已处于该目录下
	├── Scripts/
	│   ├── Model/           # 数据模型
	│   │   ├── BlockData.cs
	│   │   ├── LevelConfig.cs
	│   │   └── GameStateData.cs
	│   ├── View/            # UI和显示相关
	│   │   ├── BlockView.cs
	│   │   ├── BackpackUI.cs
	│   │   └── GameUI.cs
	│   ├── Controller/      # 控制器和管理器
	│   │   ├── GameController.cs
	│   │   ├── BlockManager.cs
	│   │   └── BackpackManager.cs
	│   └── Common/          # 通用工具和配置
	│       ├── ObjectPool.cs
	│       └── Constants.cs
	├── Prefabs/             # 预制体
	│   ├── Blocks/
	│   └── Effects/
	├── Scenes/              # 场景文件
	├── Resources/           # 资源文件
	|
	└── UI/                  # UI资源
		├── Sprites/
		└── Animations/

- 编码规范
	- 文件命名
		- 文件名首字母大写
	- 代码风格
		- 代码缩进
			- 使用制表符缩进，缩进大小为4个空格
		- 代码空格
			- 依照格式化文档使用空格
		- 代码换行
			- 依照格式化文档使用换行
		- 代码注释
			- 在每个函数和类定义的上方添加注释，描述函数或类的功能
	- 代码规范
		- 函数名首字母大写，驼峰命名
		- 方法内的局部变量名首字母小写，驼峰命名
		- 类内的成员变量名开头使用m_变量名，变量名首字母小写，驼峰命名。如：m_userName
		- 整个项目都可直接访问的全局常量名全部大写，单词之间用下划线分隔。如：USER_NAME
		- 类名首字母大写，驼峰命名。如：UserInfo
	- 代码质量
		- 每个函数只做一件事
		- 当功能复杂时，将函数拆分为多个函数
		- 抽取重复代码，封装为函数
	- 代码性能
		- 尽量减少三重及以上的嵌套循环次数。
	- 代码可维护性
		- 尽量保证代码的可维护性，便于他人维护和修改
	- 代码可读性
		- 尽量保证代码的可读性，便于他人阅读和理解
